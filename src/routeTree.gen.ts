/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as AuthRouteRouteImport } from './routes/_auth/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthRegisterRouteImport } from './routes/_auth/register'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'
import { Route as AuthenticatedSettingsRouteRouteImport } from './routes/_authenticated/settings/route'
import { Route as AuthenticatedSettingsIndexRouteImport } from './routes/_authenticated/settings/index'
import { Route as AuthenticatedDashboardIndexRouteImport } from './routes/_authenticated/dashboard/index'
import { Route as AuthVerify2faIndexRouteImport } from './routes/_auth/verify-2fa/index'
import { Route as AuthEmailVerificationIndexRouteImport } from './routes/_auth/email-verification/index'
import { Route as AuthenticatedBookmarksSlugRouteImport } from './routes/_authenticated/bookmarks/$slug'
import { Route as AuthenticatedSettingsProfileIndexRouteImport } from './routes/_authenticated/settings/profile/index'
import { Route as AuthenticatedSettingsAppearanceIndexRouteImport } from './routes/_authenticated/settings/appearance/index'
import { Route as AuthenticatedSettingsAccountIndexRouteImport } from './routes/_authenticated/settings/account/index'
import { Route as PublicUnameFolderIdRouteImport } from './routes/_public/$uname.folder.$id'
import { Route as AuthenticatedBookmarksBookmarkBIdRouteImport } from './routes/_authenticated/bookmarks/_bookmark/b.$id'

const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthenticatedSettingsRouteRoute =
  AuthenticatedSettingsRouteRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedSettingsIndexRoute =
  AuthenticatedSettingsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedDashboardIndexRoute =
  AuthenticatedDashboardIndexRouteImport.update({
    id: '/dashboard/',
    path: '/dashboard/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthVerify2faIndexRoute = AuthVerify2faIndexRouteImport.update({
  id: '/verify-2fa/',
  path: '/verify-2fa/',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthEmailVerificationIndexRoute =
  AuthEmailVerificationIndexRouteImport.update({
    id: '/email-verification/',
    path: '/email-verification/',
    getParentRoute: () => AuthRouteRoute,
  } as any)
const AuthenticatedBookmarksSlugRoute =
  AuthenticatedBookmarksSlugRouteImport.update({
    id: '/bookmarks/$slug',
    path: '/bookmarks/$slug',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedSettingsProfileIndexRoute =
  AuthenticatedSettingsProfileIndexRouteImport.update({
    id: '/profile/',
    path: '/profile/',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsAppearanceIndexRoute =
  AuthenticatedSettingsAppearanceIndexRouteImport.update({
    id: '/appearance/',
    path: '/appearance/',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsAccountIndexRoute =
  AuthenticatedSettingsAccountIndexRouteImport.update({
    id: '/account/',
    path: '/account/',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const PublicUnameFolderIdRoute = PublicUnameFolderIdRouteImport.update({
  id: '/_public/$uname/folder/$id',
  path: '/$uname/folder/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedBookmarksBookmarkBIdRoute =
  AuthenticatedBookmarksBookmarkBIdRouteImport.update({
    id: '/bookmarks/_bookmark/b/$id',
    path: '/bookmarks/b/$id',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/bookmarks/$slug': typeof AuthenticatedBookmarksSlugRoute
  '/email-verification': typeof AuthEmailVerificationIndexRoute
  '/verify-2fa': typeof AuthVerify2faIndexRoute
  '/dashboard': typeof AuthenticatedDashboardIndexRoute
  '/settings/': typeof AuthenticatedSettingsIndexRoute
  '/$uname/folder/$id': typeof PublicUnameFolderIdRoute
  '/settings/account': typeof AuthenticatedSettingsAccountIndexRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceIndexRoute
  '/settings/profile': typeof AuthenticatedSettingsProfileIndexRoute
  '/bookmarks/b/$id': typeof AuthenticatedBookmarksBookmarkBIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/bookmarks/$slug': typeof AuthenticatedBookmarksSlugRoute
  '/email-verification': typeof AuthEmailVerificationIndexRoute
  '/verify-2fa': typeof AuthVerify2faIndexRoute
  '/dashboard': typeof AuthenticatedDashboardIndexRoute
  '/settings': typeof AuthenticatedSettingsIndexRoute
  '/$uname/folder/$id': typeof PublicUnameFolderIdRoute
  '/settings/account': typeof AuthenticatedSettingsAccountIndexRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceIndexRoute
  '/settings/profile': typeof AuthenticatedSettingsProfileIndexRoute
  '/bookmarks/b/$id': typeof AuthenticatedBookmarksBookmarkBIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteRouteWithChildren
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/register': typeof AuthRegisterRoute
  '/_authenticated/bookmarks/$slug': typeof AuthenticatedBookmarksSlugRoute
  '/_auth/email-verification/': typeof AuthEmailVerificationIndexRoute
  '/_auth/verify-2fa/': typeof AuthVerify2faIndexRoute
  '/_authenticated/dashboard/': typeof AuthenticatedDashboardIndexRoute
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexRoute
  '/_public/$uname/folder/$id': typeof PublicUnameFolderIdRoute
  '/_authenticated/settings/account/': typeof AuthenticatedSettingsAccountIndexRoute
  '/_authenticated/settings/appearance/': typeof AuthenticatedSettingsAppearanceIndexRoute
  '/_authenticated/settings/profile/': typeof AuthenticatedSettingsProfileIndexRoute
  '/_authenticated/bookmarks/_bookmark/b/$id': typeof AuthenticatedBookmarksBookmarkBIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/settings'
    | '/login'
    | '/register'
    | '/bookmarks/$slug'
    | '/email-verification'
    | '/verify-2fa'
    | '/dashboard'
    | '/settings/'
    | '/$uname/folder/$id'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/profile'
    | '/bookmarks/b/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/register'
    | '/bookmarks/$slug'
    | '/email-verification'
    | '/verify-2fa'
    | '/dashboard'
    | '/settings'
    | '/$uname/folder/$id'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/profile'
    | '/bookmarks/b/$id'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_authenticated'
    | '/_authenticated/settings'
    | '/_auth/login'
    | '/_auth/register'
    | '/_authenticated/bookmarks/$slug'
    | '/_auth/email-verification/'
    | '/_auth/verify-2fa/'
    | '/_authenticated/dashboard/'
    | '/_authenticated/settings/'
    | '/_public/$uname/folder/$id'
    | '/_authenticated/settings/account/'
    | '/_authenticated/settings/appearance/'
    | '/_authenticated/settings/profile/'
    | '/_authenticated/bookmarks/_bookmark/b/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  PublicUnameFolderIdRoute: typeof PublicUnameFolderIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/register': {
      id: '/_auth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AuthenticatedSettingsIndexRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/dashboard/': {
      id: '/_authenticated/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_auth/verify-2fa/': {
      id: '/_auth/verify-2fa/'
      path: '/verify-2fa'
      fullPath: '/verify-2fa'
      preLoaderRoute: typeof AuthVerify2faIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/email-verification/': {
      id: '/_auth/email-verification/'
      path: '/email-verification'
      fullPath: '/email-verification'
      preLoaderRoute: typeof AuthEmailVerificationIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_authenticated/bookmarks/$slug': {
      id: '/_authenticated/bookmarks/$slug'
      path: '/bookmarks/$slug'
      fullPath: '/bookmarks/$slug'
      preLoaderRoute: typeof AuthenticatedBookmarksSlugRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/settings/profile/': {
      id: '/_authenticated/settings/profile/'
      path: '/profile'
      fullPath: '/settings/profile'
      preLoaderRoute: typeof AuthenticatedSettingsProfileIndexRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/appearance/': {
      id: '/_authenticated/settings/appearance/'
      path: '/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof AuthenticatedSettingsAppearanceIndexRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/account/': {
      id: '/_authenticated/settings/account/'
      path: '/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof AuthenticatedSettingsAccountIndexRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_public/$uname/folder/$id': {
      id: '/_public/$uname/folder/$id'
      path: '/$uname/folder/$id'
      fullPath: '/$uname/folder/$id'
      preLoaderRoute: typeof PublicUnameFolderIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/bookmarks/_bookmark/b/$id': {
      id: '/_authenticated/bookmarks/_bookmark/b/$id'
      path: '/bookmarks/b/$id'
      fullPath: '/bookmarks/b/$id'
      preLoaderRoute: typeof AuthenticatedBookmarksBookmarkBIdRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
  }
}

interface AuthRouteRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  AuthEmailVerificationIndexRoute: typeof AuthEmailVerificationIndexRoute
  AuthVerify2faIndexRoute: typeof AuthVerify2faIndexRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  AuthEmailVerificationIndexRoute: AuthEmailVerificationIndexRoute,
  AuthVerify2faIndexRoute: AuthVerify2faIndexRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface AuthenticatedSettingsRouteRouteChildren {
  AuthenticatedSettingsIndexRoute: typeof AuthenticatedSettingsIndexRoute
  AuthenticatedSettingsAccountIndexRoute: typeof AuthenticatedSettingsAccountIndexRoute
  AuthenticatedSettingsAppearanceIndexRoute: typeof AuthenticatedSettingsAppearanceIndexRoute
  AuthenticatedSettingsProfileIndexRoute: typeof AuthenticatedSettingsProfileIndexRoute
}

const AuthenticatedSettingsRouteRouteChildren: AuthenticatedSettingsRouteRouteChildren =
  {
    AuthenticatedSettingsIndexRoute: AuthenticatedSettingsIndexRoute,
    AuthenticatedSettingsAccountIndexRoute:
      AuthenticatedSettingsAccountIndexRoute,
    AuthenticatedSettingsAppearanceIndexRoute:
      AuthenticatedSettingsAppearanceIndexRoute,
    AuthenticatedSettingsProfileIndexRoute:
      AuthenticatedSettingsProfileIndexRoute,
  }

const AuthenticatedSettingsRouteRouteWithChildren =
  AuthenticatedSettingsRouteRoute._addFileChildren(
    AuthenticatedSettingsRouteRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedSettingsRouteRoute: typeof AuthenticatedSettingsRouteRouteWithChildren
  AuthenticatedBookmarksSlugRoute: typeof AuthenticatedBookmarksSlugRoute
  AuthenticatedDashboardIndexRoute: typeof AuthenticatedDashboardIndexRoute
  AuthenticatedBookmarksBookmarkBIdRoute: typeof AuthenticatedBookmarksBookmarkBIdRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedSettingsRouteRoute: AuthenticatedSettingsRouteRouteWithChildren,
  AuthenticatedBookmarksSlugRoute: AuthenticatedBookmarksSlugRoute,
  AuthenticatedDashboardIndexRoute: AuthenticatedDashboardIndexRoute,
  AuthenticatedBookmarksBookmarkBIdRoute:
    AuthenticatedBookmarksBookmarkBIdRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  PublicUnameFolderIdRoute: PublicUnameFolderIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
